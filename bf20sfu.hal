# Создан stepconf 1.1 в Sun Aug 13 22:25:06 2023
# Все изменения в этом файле будут перезаписаны
# при следующем запуске stepconf
loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
loadrt hal_parport cfg="0x378 out"
setp parport.0.reset-time 2500
loadrt stepgen step_type=0,0,0,0

addf parport.0.read base-thread
addf stepgen.make-pulses base-thread
addf parport.0.write base-thread
addf parport.0.reset base-thread

addf stepgen.capture-position servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread
addf stepgen.update-freq servo-thread

# net probe-in => motion.probe-input

setp parport.0.pin-02-out-invert 1
net xstep           => parport.0.pin-02-out
setp parport.0.pin-03-out-invert 1
net xdir            => parport.0.pin-03-out
net ystep           => parport.0.pin-04-out
net ydir            => parport.0.pin-05-out
net zstep           => parport.0.pin-06-out
net zdir            => parport.0.pin-07-out
setp parport.0.pin-08-out-invert 1
net astep           => parport.0.pin-08-out
setp parport.0.pin-09-out-invert 1
net adir            => parport.0.pin-09-out
net xenable         => parport.0.pin-14-out
# net spindle-on      => parport.0.pin-17-out
# net probe-in        <= parport.0.pin-11-in-not

net all-home        <= parport.0.pin-13-in-not
net all-home        => joint.0.home-sw-in
net all-home        => joint.1.home-sw-in
net all-home        => joint.2.home-sw-in

setp stepgen.0.position-scale [JOINT_0]SCALE
setp stepgen.0.steplen 2500
setp stepgen.0.stepspace 2500
setp stepgen.0.dirhold 10000
setp stepgen.0.dirsetup 5000
setp stepgen.0.maxaccel [JOINT_0]STEPGEN_MAXACCEL
net xpos-cmd joint.0.motor-pos-cmd => stepgen.0.position-cmd
net xpos-fb stepgen.0.position-fb => joint.0.motor-pos-fb
net xstep <= stepgen.0.step
net xdir <= stepgen.0.dir
net xenable joint.0.amp-enable-out => stepgen.0.enable

setp stepgen.1.position-scale [JOINT_1]SCALE
setp stepgen.1.steplen 2500
setp stepgen.1.stepspace 2500
setp stepgen.1.dirhold 10000
setp stepgen.1.dirsetup 5000
setp stepgen.1.maxaccel [JOINT_1]STEPGEN_MAXACCEL
net ypos-cmd joint.1.motor-pos-cmd => stepgen.1.position-cmd
net ypos-fb stepgen.1.position-fb => joint.1.motor-pos-fb
net ystep <= stepgen.1.step
net ydir <= stepgen.1.dir
net yenable joint.1.amp-enable-out => stepgen.1.enable

setp stepgen.2.position-scale [JOINT_2]SCALE
setp stepgen.2.steplen 2500
setp stepgen.2.stepspace 2500
setp stepgen.2.dirhold 10000
setp stepgen.2.dirsetup 5000
setp stepgen.2.maxaccel [JOINT_2]STEPGEN_MAXACCEL
net zpos-cmd joint.2.motor-pos-cmd => stepgen.2.position-cmd
net zpos-fb stepgen.2.position-fb => joint.2.motor-pos-fb
net zstep <= stepgen.2.step
net zdir <= stepgen.2.dir
net zenable joint.2.amp-enable-out => stepgen.2.enable

setp stepgen.3.position-scale [JOINT_3]SCALE
setp stepgen.3.steplen 5050
setp stepgen.3.stepspace 5050
setp stepgen.3.dirhold 500
setp stepgen.3.dirsetup 500
setp stepgen.3.maxaccel [JOINT_3]STEPGEN_MAXACCEL
net apos-cmd joint.3.motor-pos-cmd => stepgen.3.position-cmd
net apos-fb stepgen.3.position-fb => joint.3.motor-pos-fb
net astep <= stepgen.3.step
net adir <= stepgen.3.dir
net aenable joint.3.amp-enable-out => stepgen.3.enable

net estop-out <= iocontrol.0.user-enable-out
net estop-out => iocontrol.0.emc-enable-in

loadusr -W hal_manualtoolchange
net tool-change iocontrol.0.tool-change => hal_manualtoolchange.change
net tool-changed iocontrol.0.tool-changed <= hal_manualtoolchange.changed
net tool-number iocontrol.0.tool-prep-number => hal_manualtoolchange.number
net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared

#loadrt select8 count=1
#addf select8.0 base-thread
#net debounce-probe-in debounce.0.0.in <= parport.0.pin-15-in-not
#net debounce-probe-out debounce.0.0.out => select8.0.enable
#net motion-mode motion.motion-type => select8.0.sel
#net probesel select8.0.out5 => motion.probe-input

#net debounce-probe-out debounce.0.0.out => motion.probe-input

loadrt xor2 count=1
addf xor2.0 base-thread

loadrt or2 count=1
addf or2.0 base-thread

loadrt debounce cfg=1
setp debounce.0.delay 3
addf debounce.0 base-thread

net debounce-probe-in debounce.0.0.in <= parport.0.pin-15-in

net debounce-probe-in => xor2.0.in0
net prober-xor2 xor2.0.in1 <= debounce.0.0.out

net prober-or0 or2.0.in0 <= xor2.0.out
net prober-xor2 => or2.0.in1

net prober-signal motion.probe-input <= or2.0.out
